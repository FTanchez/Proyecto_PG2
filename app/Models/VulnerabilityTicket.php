<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class VulnerabilityTicket extends Model
{
    use HasFactory;

    protected $table = 'vulnerability_ticket';

    protected $fillable = [
        'plugin_id',
        'asigned_date',
        'severity_id',
        'ip',
        'port',
        'dns',
        'plugin_output',
        'maker_solution',
        'state_id',
        'user_id',
        'authorized',
        'execute_id',
        'solution',
        'rollback',
        'solution_date',
        'status',
        'ticket_type_id',
        'created_by'
    ];

    protected static function list() {
        $table = 'vulnerability_ticket';
        $users = DB::table($table)
            ->select(DB::raw("
                plugin.idp,
                plugin.name as plugin_name,
                vulnerability_ticket.id as id,
                vulnerability_ticket.ip,
                vulnerability_ticket.dns,
                vulnerability_ticket.port,
                plugin.id as plugin_id,
                severity.name as severity_name,
                state.name as state_name,
                execute.name as execute_name,
                operating_system.name as operating_system_name,
                users.id as user_id,
                users.email as user_email,
                users.name as user_name,
                vulnerability_ticket.ticket_type_id as ticket_type_id
                "))
            ->join('plugin', 'plugin.id', '=', "$table.plugin_id")
            ->join('operating_system', 'operating_system.id', '=', "plugin.operating_system_id")
            ->join('severity', 'severity.id', '=', "$table.severity_id")
            ->join('state', 'state.id', '=', "$table.state_id")
            ->join('execute', 'execute.id', '=', "$table.execute_id")
            ->join('users', 'users.id', '=', "$table.user_id")
            ->groupBy('plugin.idp',
                'plugin.name',
                'vulnerability_ticket.id',
                'vulnerability_ticket.ip',
                'vulnerability_ticket.dns',
                'vulnerability_ticket.port',
                'plugin.id',
                'severity.name',
                'state.name',
                'execute.name',
                'operating_system.name',
                'users.id',
                'users.email',
                'users.name',
                'vulnerability_ticket.ticket_type_id')
            ->orderBy('vulnerability_ticket.id', 'desc')
            ->get();

        return $users;
    }

    protected static function get($id) {
        $table = 'vulnerability_ticket';
        $users = DB::table($table)
            ->select(DB::raw("
                plugin.idp,
                plugin.name as plugin_name,
                vulnerability_ticket.id as id,
                vulnerability_ticket.ip,
                vulnerability_ticket.dns,
                vulnerability_ticket.port,
                vulnerability_ticket.ticket_type_id as ticket_type_id,
                vulnerability_ticket.created_at,
                plugin.id as plugin_id,
                severity.name as severity_name,
                state.name as state_name,
                state.id as state_id,
                execute.name as execute_name,
                operating_system.name as operating_system_name,
                users.id as user_id,
                users.email as user_email,
                users.name as user_name
                "))
            ->join('plugin', 'plugin.id', '=', "$table.plugin_id")
            ->join('operating_system', 'operating_system.id', '=', "plugin.operating_system_id")
            ->join('severity', 'severity.id', '=', "$table.severity_id")
            ->join('state', 'state.id', '=', "$table.state_id")
            ->join('execute', 'execute.id', '=', "$table.execute_id")
            ->join('users', 'users.id', '=', "$table.user_id")
            ->where('vulnerability_ticket.id', '=', $id)
            ->groupBy('plugin.idp',
                'plugin.name',
                'vulnerability_ticket.id',
                'vulnerability_ticket.ip',
                'vulnerability_ticket.dns',
                'vulnerability_ticket.port',
                'vulnerability_ticket.created_at',
                'plugin.id',
                'severity.name',
                'state.name',
                'state.id',
                'execute.name',
                'operating_system.name',
                'users.id',
                'users.email',
                'users.name',
                'vulnerability_ticket.ticket_type_id')
            ->orderBy('vulnerability_ticket.id', 'desc')
            ->get();
        
        return count($users) > 0 ? $users[0] : null;
    }

    protected static function log($id) {
        $table = 'ticket_log';

        $users = DB::table($table)
            ->select(DB::raw("
                ticket_log.id as ticket_log_id,
                ticket_log.created_at as ticket_log_created,
                state.name as ticket_log_state,
                users.id as user_id,
                users.email as user_email,
                users.name as user_name
            "))
            ->join('vulnerability_ticket', 'vulnerability_ticket.id', '=', "$table.ticket_id")
            ->join('state', 'state.id', '=', "$table.state_id")
            ->join('users', 'users.id', '=', "$table.user_id")
            ->where('vulnerability_ticket.id', '=', $id)
            ->orderBy('ticket_log.created_at', 'desc')
            ->get();

        $object = (object) [
            'ticket' => VulnerabilityTicket::get($id),
            'log' => $users,
        ];
    
        return $object;
    }
}
